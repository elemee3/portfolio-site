{"ast":null,"code":"import _classCallCheck from \"/home/elemee/Desktop/portfolio-site/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/elemee/Desktop/portfolio-site/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/elemee/Desktop/portfolio-site/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/elemee/Desktop/portfolio-site/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/elemee/Desktop/portfolio-site/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/elemee/Desktop/portfolio-site/src/pages/Tester.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nvar Tester =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tester, _Component);\n\n  function Tester(props) {\n    var _this;\n\n    _classCallCheck(this, Tester);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tester).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        address: e.target.value\n      });\n    };\n\n    _this.handleSearch = function (e) {\n      var url = 'https://maps.googleapis.com/maps/api/geocode/json';\n      var apiKey = 'API_KEY';\n      e.preventDefault();\n      fetch(url + '?address=' + _this.state.address + '&key=' + apiKey).then(function (resp) {\n        var json = resp.json();\n        return json;\n      }).then(function (json) {\n        console.log('json response::', json.results[0].geometry.location); // <-- to get obj containing lat/lng\n\n        _this.setState({\n          center: {\n            lat: json.results[0].geometry.location.lat,\n            lng: json.results[0].geometry.location.lng\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.handleAddPointer = function (e) {\n      var coordinatesArr = _this.state.coordinatesArr;\n      var url = 'https://maps.googleapis.com/maps/api/geocode/json';\n      var apiKey = 'API_KEY';\n      e.preventDefault();\n      fetch(url + '?address=' + _this.state.address + '&key=' + apiKey).then(function (resp) {\n        var json = resp.json();\n        return json;\n      }).then(function (json) {\n        console.log('json response::', json.results[0].geometry.location); // <-- to get obj containing lat/lng\n\n        coordinatesArr.push({\n          lat: json.results[0].geometry.location.lat,\n          lng: json.results[0].geometry.location.lng\n        });\n\n        _this.setState({\n          coordinatesArr: coordinatesArr\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.determinePointer = function () {\n      var pointerStyle = {\n        position: 'absolute',\n        width: 40,\n        height: 40,\n        left: -40 / 2,\n        top: -40 / 2,\n        border: '3px solid green',\n        borderRadius: 40,\n        backgroundColor: 'white',\n        opacity: 0.6,\n        textAlign: 'center',\n        color: '#3f51b5',\n        fontSize: 16,\n        fontWeight: 'bold',\n        padding: 4\n      };\n      return _this.state.coordinatesArr.map(function (coordinates) {\n        return React.createElement(\"div\", {\n          style: pointerStyle,\n          lat: coordinates.lat,\n          lng: coordinates.lng,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.state = {\n      center: {\n        lat: 32.7096422,\n        //default downtown San Diego\n        lng: -117.1579546\n      },\n      zoom: 11,\n      address: '',\n      coordinatesArr: [{\n        lat: 32.8328112,\n        lng: -117.2712717\n      }, {\n        lat: 32.6400541,\n        lng: -117.0841955\n      }, {\n        lat: 32.7565162,\n        lng: -117.1122965\n      }],\n      newCoordinates: {}\n    };\n    return _this;\n  }\n\n  _createClass(Tester, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '75vh',\n          width: '70%',\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'API_KEY'\n        },\n        center: this.state.center,\n        zoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.determinePointer())), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Enter Address\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add Pointer\",\n        onClick: this.handleAddPointer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Tester;\n}(Component);\n\nexport default Tester;","map":{"version":3,"sources":["/home/elemee/Desktop/portfolio-site/src/pages/Tester.js"],"names":["React","Component","GoogleMapReact","Tester","props","handleChange","e","setState","address","target","value","handleSearch","url","apiKey","preventDefault","fetch","state","then","resp","json","console","log","results","geometry","location","center","lat","lng","catch","err","handleAddPointer","coordinatesArr","push","determinePointer","pointerStyle","position","width","height","left","top","border","borderRadius","backgroundColor","opacity","textAlign","color","fontSize","fontWeight","padding","map","coordinates","zoom","newCoordinates","margin","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nclass Tester extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      center: {\n        lat: 32.7096422,    //default downtown San Diego\n        lng: -117.1579546\n      },\n      zoom: 11,\n      address: '',\n      coordinatesArr: [\n        {\n          lat: 32.8328112,\n          lng: -117.2712717\n        },\n        {\n          lat: 32.6400541,\n          lng: -117.0841955\n        },\n        {\n          lat: 32.7565162,\n          lng: -117.1122965\n        }\n      ],\n      newCoordinates: {}\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      address:  e.target.value\n    })\n  }\n\n  handleSearch = (e) => {\n    const url = 'https://maps.googleapis.com/maps/api/geocode/json'\n    const apiKey = 'API_KEY'\n    e.preventDefault()\n    fetch(url + '?address=' + this.state.address + '&key=' + apiKey)\n    .then(resp => {\n      let json = resp.json()\n      return json\n    })\n    .then(json => {\n      console.log('json response::', json.results[0].geometry.location) // <-- to get obj containing lat/lng\n      this.setState({\n        center: {\n          lat: json.results[0].geometry.location.lat,\n          lng: json.results[0].geometry.location.lng\n        }\n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  handleAddPointer = (e) => {\n    let { coordinatesArr } = this.state\n    const url = 'https://maps.googleapis.com/maps/api/geocode/json'\n    const apiKey = 'API_KEY'\n    e.preventDefault()\n    fetch(url + '?address=' + this.state.address + '&key=' + apiKey)\n    .then(resp => {\n      let json = resp.json()\n      return json\n    })\n    .then(json => {\n      console.log('json response::', json.results[0].geometry.location) // <-- to get obj containing lat/lng\n      coordinatesArr.push({\n        lat: json.results[0].geometry.location.lat,\n        lng: json.results[0].geometry.location.lng\n      })\n      this.setState({\n        coordinatesArr: coordinatesArr\n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n\n  }\n\n  determinePointer = () => {\n    const pointerStyle = {\n      position: 'absolute',\n      width: 40,\n      height: 40,\n      left: -40 / 2,\n      top: -40 / 2,\n      border: '3px solid green',\n      borderRadius: 40,\n      backgroundColor: 'white',\n      opacity: 0.6,\n      textAlign: 'center',\n      color: '#3f51b5',\n      fontSize: 16,\n      fontWeight: 'bold',\n      padding: 4\n    }\n    return this.state.coordinatesArr.map(coordinates => {\n      return (\n        <div style={pointerStyle} lat={coordinates.lat} lng={coordinates.lng}>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div style={{ height: '75vh', width: '70%', margin: '0 auto' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: 'API_KEY' }}\n            center={this.state.center}\n            zoom={this.state.zoom}>\n            {this.determinePointer()}\n\n          </GoogleMapReact>\n        </div>\n        <br/>\n        <form>\n          <input type=\"text\" name=\"address\" placeholder=\"Enter Address\" onChange={this.handleChange} />\n          <input type=\"submit\" value=\"Submit\" onClick={this.handleSearch} />\n          <input type=\"submit\" value=\"Add Pointer\" onClick={this.handleAddPointer} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Tester;\n"]},"metadata":{},"sourceType":"module"}