{"ast":null,"code":"import _classCallCheck from \"/home/elemee/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/elemee/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/elemee/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/elemee/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/elemee/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/elemee/Desktop/portfolio/src/pages/Tester.js\";\nimport React, { Component } from 'react';\n\nvar Tester =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tester, _Component);\n\n  function Tester(props) {\n    var _this;\n\n    _classCallCheck(this, Tester);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tester).call(this, props));\n\n    _this.initMap = function () {\n      // Create the map.\n      var map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 4,\n        center: {\n          lat: 37.090,\n          lng: -95.712\n        },\n        mapTypeId: 'terrain'\n      }); // Construct the circle for each value in citymap.\n\n      for (var city in _this.citymap) {\n        // Add the circle for this city to the map.\n        var cityCircle = new google.maps.Circle({\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          map: map,\n          center: _this.citymap[city].center,\n          radius: 100000\n        });\n      }\n    };\n\n    _this.citymap = {\n      chicago: {\n        center: {\n          lat: 41.878,\n          lng: -87.629\n        },\n        population: 2714856\n      },\n      newyork: {\n        center: {\n          lat: 40.714,\n          lng: -74.005\n        },\n        population: 8405837\n      },\n      losangeles: {\n        center: {\n          lat: 34.052,\n          lng: -118.243\n        },\n        population: 3857799\n      },\n      vancouver: {\n        center: {\n          lat: 49.25,\n          lng: -123.1\n        },\n        population: 603502\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Tester, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        async: true,\n        defer: true,\n        src: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCYw5lzQYX9SL8qlqqKZ5latLcBuRYfDyQ&callback=initMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Tester;\n}(Component);\n\nexport default Tester;","map":{"version":3,"sources":["/home/elemee/Desktop/portfolio/src/pages/Tester.js"],"names":["React","Component","Tester","props","initMap","map","google","maps","Map","document","getElementById","zoom","center","lat","lng","mapTypeId","city","citymap","cityCircle","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","chicago","population","newyork","losangeles","vancouver"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAsBnBC,OAtBmB,GAsBT,YAAM;AACd;AACA,UAAIC,GAAG,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,GAAhB,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AAC5DC,QAAAA,IAAI,EAAE,CADsD;AAE5DC,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,GAAG,EAAE,CAAC;AAApB,SAFoD;AAG5DC,QAAAA,SAAS,EAAE;AAHiD,OAApD,CAAV,CAFc,CAQd;;AACA,WAAK,IAAIC,IAAT,IAAiB,MAAKC,OAAtB,EAA+B;AAC7B;AACA,YAAIC,UAAU,GAAG,IAAIZ,MAAM,CAACC,IAAP,CAAYY,MAAhB,CAAuB;AACtCC,UAAAA,WAAW,EAAE,SADyB;AAEtCC,UAAAA,aAAa,EAAE,GAFuB;AAGtCC,UAAAA,YAAY,EAAE,CAHwB;AAItCC,UAAAA,SAAS,EAAE,SAJ2B;AAKtCC,UAAAA,WAAW,EAAE,IALyB;AAMtCnB,UAAAA,GAAG,EAAEA,GANiC;AAOtCO,UAAAA,MAAM,EAAE,MAAKK,OAAL,CAAaD,IAAb,EAAmBJ,MAPW;AAQtCa,UAAAA,MAAM,EAAE;AAR8B,SAAvB,CAAjB;AAUD;AACF,KA5CkB;;AAEjB,UAAKR,OAAL,GAAe;AACbS,MAAAA,OAAO,EAAE;AACPd,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,GAAG,EAAE,CAAC;AAApB,SADD;AAEPa,QAAAA,UAAU,EAAE;AAFL,OADI;AAKbC,MAAAA,OAAO,EAAE;AACPhB,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,GAAG,EAAE,CAAC;AAApB,SADD;AAEPa,QAAAA,UAAU,EAAE;AAFL,OALI;AASbE,MAAAA,UAAU,EAAE;AACVjB,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,GAAG,EAAE,CAAC;AAApB,SADE;AAEVa,QAAAA,UAAU,EAAE;AAFF,OATC;AAabG,MAAAA,SAAS,EAAE;AACTlB,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,KAAN;AAAaC,UAAAA,GAAG,EAAE,CAAC;AAAnB,SADC;AAETa,QAAAA,UAAU,EAAE;AAFH;AAbE,KAAf;AAFiB;AAoBlB;;;;6BA0BQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,KAAK,MAAnB;AACA,QAAA,GAAG,EAAC,sGADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AAWD;;;;EA3DkB1B,S;;AA8DrB,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Tester extends Component {\n  constructor(props) {\n    super(props)\n    this.citymap = {\n      chicago: {\n        center: {lat: 41.878, lng: -87.629},\n        population: 2714856\n      },\n      newyork: {\n        center: {lat: 40.714, lng: -74.005},\n        population: 8405837\n      },\n      losangeles: {\n        center: {lat: 34.052, lng: -118.243},\n        population: 3857799\n      },\n      vancouver: {\n        center: {lat: 49.25, lng: -123.1},\n        population: 603502\n      }\n    }\n  }\n\n  initMap = () => {\n    // Create the map.\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 4,\n      center: {lat: 37.090, lng: -95.712},\n      mapTypeId: 'terrain'\n    });\n\n    // Construct the circle for each value in citymap.\n    for (var city in this.citymap) {\n      // Add the circle for this city to the map.\n      var cityCircle = new google.maps.Circle({\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map: map,\n        center: this.citymap[city].center,\n        radius: 100000\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n\n          <div id=\"map\"></div>\n\n          <script async defer\n          src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCYw5lzQYX9SL8qlqqKZ5latLcBuRYfDyQ&callback=initMap\">\n          </script>\n\n      </div>\n    );\n  }\n}\n\nexport default Tester;\n"]},"metadata":{},"sourceType":"module"}